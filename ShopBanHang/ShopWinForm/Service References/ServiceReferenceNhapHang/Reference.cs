//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopWinForm.ServiceReferenceNhapHang {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WFNhapHang", Namespace="http://schemas.datacontract.org/2004/07/ShopBanHang")]
    [System.SerializableAttribute()]
    public partial class WFNhapHang : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaPNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NgayNhapField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaPN {
            get {
                return this.MaPNField;
            }
            set {
                if ((this.MaPNField.Equals(value) != true)) {
                    this.MaPNField = value;
                    this.RaisePropertyChanged("MaPN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NgayNhap {
            get {
                return this.NgayNhapField;
            }
            set {
                if ((this.NgayNhapField.Equals(value) != true)) {
                    this.NgayNhapField = value;
                    this.RaisePropertyChanged("NgayNhap");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WFCTPhieuNhap", Namespace="http://schemas.datacontract.org/2004/07/ShopBanHang")]
    [System.SerializableAttribute()]
    public partial class WFCTPhieuNhap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaPNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaSPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SoLuongField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaPN {
            get {
                return this.MaPNField;
            }
            set {
                if ((this.MaPNField.Equals(value) != true)) {
                    this.MaPNField = value;
                    this.RaisePropertyChanged("MaPN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaSP {
            get {
                return this.MaSPField;
            }
            set {
                if ((this.MaSPField.Equals(value) != true)) {
                    this.MaSPField = value;
                    this.RaisePropertyChanged("MaSP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SoLuong {
            get {
                return this.SoLuongField;
            }
            set {
                if ((this.SoLuongField.Equals(value) != true)) {
                    this.SoLuongField = value;
                    this.RaisePropertyChanged("SoLuong");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceNhapHang.IServiceNhapHang")]
    public interface IServiceNhapHang {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/All", ReplyAction="http://tempuri.org/IServiceNhapHang/AllResponse")]
        ShopWinForm.ServiceReferenceNhapHang.WFNhapHang[] All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/All", ReplyAction="http://tempuri.org/IServiceNhapHang/AllResponse")]
        System.Threading.Tasks.Task<ShopWinForm.ServiceReferenceNhapHang.WFNhapHang[]> AllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/CTPhieuNhap", ReplyAction="http://tempuri.org/IServiceNhapHang/CTPhieuNhapResponse")]
        ShopWinForm.ServiceReferenceNhapHang.WFCTPhieuNhap[] CTPhieuNhap(int mapn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/CTPhieuNhap", ReplyAction="http://tempuri.org/IServiceNhapHang/CTPhieuNhapResponse")]
        System.Threading.Tasks.Task<ShopWinForm.ServiceReferenceNhapHang.WFCTPhieuNhap[]> CTPhieuNhapAsync(int mapn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/XoaPN", ReplyAction="http://tempuri.org/IServiceNhapHang/XoaPNResponse")]
        bool XoaPN(int masp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/XoaPN", ReplyAction="http://tempuri.org/IServiceNhapHang/XoaPNResponse")]
        System.Threading.Tasks.Task<bool> XoaPNAsync(int masp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/ThemPN", ReplyAction="http://tempuri.org/IServiceNhapHang/ThemPNResponse")]
        bool ThemPN(System.DateTime ngay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/ThemPN", ReplyAction="http://tempuri.org/IServiceNhapHang/ThemPNResponse")]
        System.Threading.Tasks.Task<bool> ThemPNAsync(System.DateTime ngay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/ThemCTPN", ReplyAction="http://tempuri.org/IServiceNhapHang/ThemCTPNResponse")]
        bool ThemCTPN(int mapn, int masp, int soluong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/ThemCTPN", ReplyAction="http://tempuri.org/IServiceNhapHang/ThemCTPNResponse")]
        System.Threading.Tasks.Task<bool> ThemCTPNAsync(int mapn, int masp, int soluong);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/LayMaPN", ReplyAction="http://tempuri.org/IServiceNhapHang/LayMaPNResponse")]
        ShopWinForm.ServiceReferenceNhapHang.WFNhapHang LayMaPN();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhapHang/LayMaPN", ReplyAction="http://tempuri.org/IServiceNhapHang/LayMaPNResponse")]
        System.Threading.Tasks.Task<ShopWinForm.ServiceReferenceNhapHang.WFNhapHang> LayMaPNAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceNhapHangChannel : ShopWinForm.ServiceReferenceNhapHang.IServiceNhapHang, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceNhapHangClient : System.ServiceModel.ClientBase<ShopWinForm.ServiceReferenceNhapHang.IServiceNhapHang>, ShopWinForm.ServiceReferenceNhapHang.IServiceNhapHang {
        
        public ServiceNhapHangClient() {
        }
        
        public ServiceNhapHangClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceNhapHangClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNhapHangClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNhapHangClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ShopWinForm.ServiceReferenceNhapHang.WFNhapHang[] All() {
            return base.Channel.All();
        }
        
        public System.Threading.Tasks.Task<ShopWinForm.ServiceReferenceNhapHang.WFNhapHang[]> AllAsync() {
            return base.Channel.AllAsync();
        }
        
        public ShopWinForm.ServiceReferenceNhapHang.WFCTPhieuNhap[] CTPhieuNhap(int mapn) {
            return base.Channel.CTPhieuNhap(mapn);
        }
        
        public System.Threading.Tasks.Task<ShopWinForm.ServiceReferenceNhapHang.WFCTPhieuNhap[]> CTPhieuNhapAsync(int mapn) {
            return base.Channel.CTPhieuNhapAsync(mapn);
        }
        
        public bool XoaPN(int masp) {
            return base.Channel.XoaPN(masp);
        }
        
        public System.Threading.Tasks.Task<bool> XoaPNAsync(int masp) {
            return base.Channel.XoaPNAsync(masp);
        }
        
        public bool ThemPN(System.DateTime ngay) {
            return base.Channel.ThemPN(ngay);
        }
        
        public System.Threading.Tasks.Task<bool> ThemPNAsync(System.DateTime ngay) {
            return base.Channel.ThemPNAsync(ngay);
        }
        
        public bool ThemCTPN(int mapn, int masp, int soluong) {
            return base.Channel.ThemCTPN(mapn, masp, soluong);
        }
        
        public System.Threading.Tasks.Task<bool> ThemCTPNAsync(int mapn, int masp, int soluong) {
            return base.Channel.ThemCTPNAsync(mapn, masp, soluong);
        }
        
        public ShopWinForm.ServiceReferenceNhapHang.WFNhapHang LayMaPN() {
            return base.Channel.LayMaPN();
        }
        
        public System.Threading.Tasks.Task<ShopWinForm.ServiceReferenceNhapHang.WFNhapHang> LayMaPNAsync() {
            return base.Channel.LayMaPNAsync();
        }
    }
}
